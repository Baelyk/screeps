module.exports = {"version":3,"file":"main.js","sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/source-map.js","../src/utils/ErrorMapper.ts","../src/utils/watch-client.ts","../src/utils/logger.ts","../src/construct.ts","../src/actions.ts","../src/creeps.ts","../src/initialize.ts","../src/spawns.ts","../src/population.ts","../src/main.ts"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","// tslint:disable:no-conditional-assignment\nimport { SourceMapConsumer } from \"source-map\";\n\nexport class ErrorMapper {\n  // Cache consumer\n  private static _consumer?: SourceMapConsumer;\n\n  public static get consumer(): SourceMapConsumer {\n    if (this._consumer == null) {\n      this._consumer = new SourceMapConsumer(require(\"main.js.map\"));\n    }\n\n    return this._consumer;\n  }\n\n  // Cache previously mapped traces to improve performance\n  public static cache: { [key: string]: string } = {};\n\n  /**\n   * Generates a stack trace using a source map generate original symbol names.\n   *\n   * WARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n   * (Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n   *\n   * @param {Error | string} error The error or original stack trace\n   * @returns {string} The source-mapped stack trace\n   */\n  public static sourceMappedStackTrace(error: Error | string): string {\n    const stack: string = error instanceof Error ? (error.stack as string) : error;\n    if (this.cache.hasOwnProperty(stack)) {\n      return this.cache[stack];\n    }\n\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm;\n    let match: RegExpExecArray | null;\n    let outStack = error.toString();\n\n    while ((match = re.exec(stack))) {\n      if (match[2] === \"main\") {\n        const pos = this.consumer.originalPositionFor({\n          column: parseInt(match[4], 10),\n          line: parseInt(match[3], 10)\n        });\n\n        if (pos.line != null) {\n          if (pos.name) {\n            outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`;\n          } else {\n            if (match[1]) {\n              // no original source file name known - use file name from given trace\n              outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`;\n            } else {\n              // no original source file name known or in given trace - omit name\n              outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`;\n            }\n          }\n        } else {\n          // no known position\n          break;\n        }\n      } else {\n        // no more parseable lines\n        break;\n      }\n    }\n\n    this.cache[stack] = outStack;\n    return outStack;\n  }\n\n  public static wrapLoop(loop: () => void): () => void {\n    return () => {\n      try {\n        loop();\n      } catch (e) {\n        if (e instanceof Error) {\n          if (\"sim\" in Game.rooms) {\n            const message = `Source maps don't work in the simulator - displaying original error`;\n            console.log(`<span style='color:red'>${message}<br>${_.escape(e.stack)}</span>`);\n          } else {\n            console.log(`<span style='color:red'>${_.escape(this.sourceMappedStackTrace(e))}</span>`);\n          }\n        } else {\n          // can't handle it\n          throw e;\n        }\n      }\n    };\n  }\n}\n","export function watcher () {\n  if (typeof Memory.watch !== \"object\") {\n    Memory.watch = {};\n  }\n  if (typeof Memory.watch.expressions !== \"object\") {\n    Memory.watch.expressions = {};\n  }\n  if (typeof Memory.watch.values !== \"object\") {\n    Memory.watch.values = {};\n  }\n  _.each(Memory.watch.expressions, (expr, name) => {\n    if (Memory.watch.values == undefined || name == undefined) return;\n    if (typeof expr !== \"string\") return;\n    let result;\n    try {\n      result = eval(expr);\n    } catch (ex) {\n      result = \"Error: \" + ex.message;\n    }\n    if (name == \"console\") {\n      if (typeof result !== \"undefined\") console.log(result);\n    } else {\n      Memory.watch.values[name] =\n        typeof result !== \"undefined\" ? result.toString() : result;\n    }\n  });\n};\n","// Useful functions for producing user-readable output to the console\n\n/**\n * Return the name of the error code, i.e. it's constant name\n *\n * @param  error the error code\n *\n * @return the constant name of the error code, or an empty string if the error code does not exist\n */\nexport function errorConstant (error: ResponseCode): string {\n  switch (error) {\n    case OK: return \"OK\"\n    case ERR_NOT_OWNER: return \"ERR_NOT_OWNER\"\n    case ERR_NO_PATH: return \"ERR_NO_PATH\"\n    case ERR_NAME_EXISTS: return \"ERR_NAME_EXISTS\"\n    case ERR_BUSY: return \"ERR_BUSY\"\n    case ERR_NOT_FOUND : return \"ERR_NOT_FOUND \"\n    case ERR_NOT_ENOUGH_RESOURCES: return \"ERR_NOT_ENOUGH_RESOURCES\"\n    case ERR_NOT_ENOUGH_ENERGY: return \"ERR_NOT_ENOUGH_ENERGY\"\n    case ERR_INVALID_TARGET: return \"ERR_INVALID_TARGET\"\n    case ERR_FULL: return \"ERR_FULL\"\n    case ERR_NOT_IN_RANGE: return \"ERR_NOT_IN_RANGE\"\n    case ERR_INVALID_ARGS: return \"ERR_INVALID_ARGS\"\n    case ERR_TIRED: return \"ERR_TIRED\"\n    case ERR_NO_BODYPART: return \"ERR_NO_BODYPART\"\n    case ERR_NOT_ENOUGH_EXTENSIONS: return \"ERR_NOT_ENOUGH_EXTENSIONS\"\n    case ERR_RCL_NOT_ENOUGH: return \"ERR_RCL_NOT_ENOUGH\"\n    case ERR_GCL_NOT_ENOUGH: return \"ERR_GCL_NOT_ENOUGH\"\n    default: return \"\"\n  }\n}\n\n/**\n * Logs a message in blue\n *\n * @param  msg the message\n */\nexport function info (msg?: any, type = InfoType.general) {\n  if (Memory.debug.log.infoSettings[type]) console.log(`{cyan-fg}Info: ${msg}{/cyan-fg}`)\n}\n\n/**\n * Logs a message in red\n *\n * @param  msg the message\n */\nexport function error (msg?: any) {\n  console.log(`{red-fg}Error: ${msg}{/red-fg}`)\n}\n\n/**\n * Logs a message in yellow\n *\n * @param  msg the message\n */\nexport function warn (msg?: any) {\n  console.log(`{yellow-fg}Warn: ${msg}{/yellow-fg}`)\n}\n\n/**\n * Creates a string from a provided BodyPartConstant array\n *\n * @param  body the BodyPartConstant[]\n *\n * @return a string representing the body\n */\nexport function stringifyBody (body: BodyPartConstant[]): string {\n  let string = \"\"\n  body.forEach(part => {\n    switch (part) {\n      case WORK: string += \"W\"; break\n      case CARRY: string += \"C\"; break\n      case MOVE: string += \"M\"; break\n      default: error(`stringifyBody unexpected body part ${part}`)\n    }\n  })\n  return string\n}\n\n/**\n * Log the current tick\n */\nexport function tick (format?: string) {\n  if (format == undefined) {\n    format = `{bold}{yellow-bg}`\n  }\n  console.log(`${format}tick: ${Game.time}`)\n}\n","import { error, info, warn } from \"utils/logger\";\n\n// Manages construction\n\n// ISSUE: When a creep dies before it can completely construct something, the site is lost from the\n// queue\n\n/**\n * Initialize construction\n *\n * @param  spawn the initial spawn\n */\nexport function initConstruction (spawn: StructureSpawn) {\n  // Initialize an empty construction queue\n  Memory.constructionQueue = []\n\n  // Construct containers near the sources for miners\n  constructMinerContainers(spawn.room, 1)\n\n  // Construct a road from the spawn to the sources in the room.\n  spawn.room.find(FIND_SOURCES_ACTIVE).forEach(source => {\n    let path = PathFinder.search(spawn.pos, {pos: source.pos, range: 1}).path\n    info(`Source road from ${spawn.pos} to ${source.pos}: ${JSON.stringify(path)}`, InfoType.build)\n    buildRoad(path)\n  })\n}\n\n/**\n * Create road construction sites along a path\n *\n * @param  path an array of `RoomPosition`s\n */\nexport function buildRoad (path: RoomPosition[]) {\n  if (!Array.isArray(path) || path.length === 0) return\n  path.forEach(position => {\n    buildWithoutChecks(position as RoomPosition, STRUCTURE_ROAD)\n  })\n}\n\nfunction buildWithoutChecks(position: RoomPosition, structureType: BuildableStructureConstant) {\n  if (position.createConstructionSite && position.createConstructionSite(structureType) === OK) {\n    addToQueue(position)\n  } else {\n    warn(JSON.stringify(position))\n  }\n}\n\n/**\n * Build a construction site at a position\n *\n * @param  position the room position at which to create the construction site\n * @param  structureType the type of structure to create a construction site for\n * @return returns true if the construction site was successfully created\n */\nfunction build(position: RoomPosition, structureType: BuildableStructureConstant): boolean {\n  // Attempt to create the construction site\n  let response = position.createConstructionSite(structureType)\n\n  // Handle the response\n  if (response === ERR_INVALID_TARGET || response === ERR_INVALID_ARGS ) {\n    let structures = position.lookFor(LOOK_STRUCTURES).filter(structure => {\n      return structure.structureType === structureType\n    })\n    let sites = position.lookFor(LOOK_CONSTRUCTION_SITES).filter(site => {\n      return site.structureType === structureType\n    })\n    if (structures.length > 0 || sites.length > 0) {\n      warn(`{o-fg}build attempted to build ${structureType} over site/structure of same ` +\n        `time{/o-fg}`)\n    } else {\n      error(`build attempted to build ${structureType} over invalid terrain at ` +\n        `(${response}) ${position}`)\n    }\n  } else if (response === ERR_FULL) {\n    error(`build exceded construction capacity`)\n  } else if (response === ERR_RCL_NOT_ENOUGH) {\n    error(`build attempted to build ${structureType} with insufficient RCL: ` +\n      `${(Game.rooms[position.roomName].controller as StructureController).level}`)\n  } else if (response === OK) {\n    // Construction site successfullly created\n    addToQueue(position)\n    return true\n  }\n  return false\n}\n\n/**\n * Add construction sites at a position to the construction queue\n *\n * @param  position the position at which there are construction sites to add to the construction\n * queue\n */\nfunction addToQueue (position: RoomPosition) {\n  Memory.constructionQueue.push(position)\n}\n\n/**\n * Gets and removes the first construction site from the queue\n *\n * @return the id of the construction site if the queue is not empty\n */\nexport function fromQueue(): string | undefined {\n  let queueItem = Memory.constructionQueue.shift()\n  if (queueItem == undefined) return\n  let position = Game.rooms[queueItem.roomName].getPositionAt(queueItem.x, queueItem.y)\n  if (position == undefined) return\n  let sites = position.lookFor(LOOK_CONSTRUCTION_SITES).map(site => {\n      return site.id\n    })\n  info(`Removed ${position} from queue`)\n  // Each construction sites should have it's own entry in the queue even if it has the same\n  // position as another site. So for example, if there were two sites at point A, there would be\n  // two entries in the queue for point A, so removing one instance will be fine.\n  //\n  // HOWEVER, if the second instance of point A in the queue is accessed before the first site is\n  // finished, there will be an issue\n  return sites[0]\n}\n\n/**\n * Gets the length of the construction queue\n *\n * @return the length of the construction queue\n */\nexport function queueLength(): number {\n  return Memory.constructionQueue.length\n}\n\nexport function constructMinerContainers (room: Room, max: number) {\n  // 16 is the maximum number of containers that could be placed in an r = 2 ring around a source\n  if (max === -1) max = 16\n  let sources = room.find(FIND_SOURCES)\n  let terrain = Game.map.getRoomTerrain(room.name)\n  sources.forEach(source => {\n    let count = 0\n    getSurroundingTiles(source.pos, 2).forEach(position => {\n      if (count < max) {\n        // If the terrain at the position is plain\n        if (terrain.get(position.x, position.y) === 0) {\n          let viable = surroundingTilesAreEmpty(position, [STRUCTURE_CONTAINER])\n\n          if (viable) {\n            build(position, STRUCTURE_CONTAINER)\n            count++\n          }\n        }\n      }\n    })\n    if (count === 0) {\n      error(`Unable to find suitable container location for source at (${source.pos.x}, ` +\n        `${source.pos.y})`)\n    }\n  })\n}\n\n/**\n * Get a ring of the surrounding coords of radius\n *\n * @param  x the x coord of the center\n * @param  y the y coord of the center\n * @param  radius=0 the radius of the ring, where radius 0 is just the point\n *\n * @return an array of coordinate pairs forming the ring\n */\nfunction getSurroundingCoords(x: number, y: number, radius = 1): {x: number, y: number}[] {\n  if (radius === 0) return [{x, y}]\n\n  let maxX = x + radius\n  let maxY = y + radius\n  let minX = x - radius\n  let minY = y - radius\n  let coords = []\n\n  for (let xCoord = minX; xCoord <= maxX; xCoord++) {\n    coords.push({\n      x: xCoord, y: maxY\n    })\n    coords.push({\n      x: xCoord, y: minY\n    })\n  }\n\n  // Don't include the coordinates at the corners, because they were included in the first for loop\n  for (let yCoord = minY + 1; yCoord < maxY; yCoord++) {\n    coords.push({\n      x: maxX, y: yCoord\n    })\n    coords.push({\n      x: minX, y: yCoord\n    })\n  }\n\n  return coords\n}\n\nexport function getSurroundingTiles(position: RoomPosition, radius = 0): RoomPosition[] {\n  let coords = getSurroundingCoords(position.x, position.y, radius)\n  return coords.map(coord => {\n    return Game.rooms[position.roomName].getPositionAt(coord.x, coord.y) as RoomPosition\n  })\n}\n\nexport function unassignConstruction (name: string) {\n  let memory = Memory.creeps[name]\n  if (memory.assignedConstruction) {\n    let site = Game.getObjectById(memory.assignedConstruction) as ConstructionSite\n    Memory.constructionQueue.unshift(site.pos)\n    delete memory.assignedConstruction\n  } else {\n    warn(`Attempted to delete undefined assigned construction for creep ${name}`)\n  }\n}\n\nfunction getStructuresNeedingRepair (room: Room): string[] {\n  return room.find(FIND_STRUCTURES)\n  .filter(structure => {\n    switch (structure.structureType) {\n      case STRUCTURE_ROAD:\n      case STRUCTURE_CONTAINER:\n        return true\n      default: return false\n    }\n  })\n  .map(structure => {\n    return structure.id\n  })\n}\n\nfunction sortRepairQueue() {\n  Memory.repairQueue = Memory.repairQueue.sort((a, b) => {\n    let structureA = Game.getObjectById(a) as Structure\n    let structureB = Game.getObjectById(b) as Structure\n    if (structureA.hits < structureB.hits) return -1\n    if (structureA.hits < structureB.hits) return -1\n    return 0\n  })\n}\n\nexport function resetRepairQueue (room: Room) {\n  let oldQueue = Memory.repairQueue\n  info(`Resetting repair queue`)\n  let structures = getStructuresNeedingRepair(room)\n  Memory.repairQueue = structures\n  sortRepairQueue()\n  // Exactly how arrays were meant to be compared\n  if (JSON.stringify(oldQueue) === JSON.stringify(Memory.repairQueue)) {\n    warn(`Unnecessary repair queue reset`)\n  }\n  }\n\nexport function fromRepairQueue(): string | undefined {\n  let repair = Game.getObjectById(Memory.repairQueue.shift()) as Structure\n  if (repair == undefined) return\n  while (repair.hits === repair.hitsMax) {\n    repair = Game.getObjectById(Memory.repairQueue.shift()) as Structure\n    if (repair == undefined) return\n  }\n  return repair.id\n}\n\nexport function surroundingTilesAreEmpty(position: RoomPosition, exceptions?: StructureConstant[]): boolean {\n  let terrain = Game.map.getRoomTerrain(position.roomName)\n  let empty = true\n\n  // Exceptions should not be undefined and should include roads, unless it is an empty array\n  if (exceptions == undefined) {\n    exceptions = [STRUCTURE_ROAD]\n  }\n  if (exceptions.length > 0 && exceptions.indexOf(STRUCTURE_ROAD) === -1) {\n    exceptions.push(STRUCTURE_ROAD)\n  }\n\n  getSurroundingTiles(position, 1).forEach(positionAround => {\n    // If the terrain at the position isn't plain,\n    if (terrain.get(positionAround.x, positionAround.y) !== 0) {\n      // This terrain isn't viable\n      empty = false\n    }\n    positionAround.lookFor(LOOK_STRUCTURES).forEach(structure => {\n      if ((exceptions as StructureConstant[]).indexOf(structure.structureType) === -1) {\n        empty = false\n      }\n    })\n  })\n\n  return empty\n}\n\n/**\n * Gets the length of the construction queue\n *\n * @return the length of the construction queue\n */\nexport function repairQueueLength(): number {\n  return Memory.repairQueue.length\n}\n\nexport function buildStructure(position: RoomPosition, type: BuildableStructureConstant): boolean {\n  return build(position, type)\n}\n","import { fromRepairQueue } from \"construct\";\nimport { errorConstant, warn, info, error } from \"utils/logger\";\nimport { countRole } from \"creeps\";\n\n/**\n * Harvest energy from a specified Source or find the first Source in the room.\n *\n * @param  creep The creep to harvest the energy\n * @param  source The Source, or undefined\n */\nexport function harvestEnergy (creep: Creep, source?: Source) {\n  // TODO: This currently permanently assigns a source to creeps that shouldn't have a permanent\n  // source. Additionally, this is a LOT of CPU for harvesting. Even worse, this doesn't even solve\n  // the problem I wrote it to solve, which was picking a source not blocked by another creep.\n  let path;\n  if (source == undefined) {\n    if (creep.memory.assignedSource == undefined) {\n      let sources = [...creep.room.find(FIND_SOURCES)].map(source => {\n        return { source, path: creep.pos.findPathTo(source)}\n      }).sort((a, b) => {\n        if (a.path.length < b.path.length) return -1\n        if (a.path.length > b.path.length) return 1\n        return 0\n      })\n      source = sources[0].source as Source\n      path = sources[0].path\n\n      // If this amount of work is going to be done, we are going to assign this source to the creep\n      creep.memory.assignedSource = source.id\n    } else {\n      source = Game.getObjectById(creep.memory.assignedSource) as Source\n    }\n  }\n\n  // Try to harvest energy. If we can't because we're not in range, move towards the source\n  let response = creep.harvest(source)\n  if (response === ERR_NOT_IN_RANGE) {\n    if (path) {\n      creep.moveByPath(path)\n    } else {\n      creep.moveTo(source);\n    }\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} harvesting ${source.pos} with response ${errorConstant(response)}`)\n  }\n}\n\n/**\n * Get energy from a structure that can give out energy or harvestEnergy\n *\n * @param  creep The creep to get the energy\n */\nexport function getEnergy (creep: Creep, target?: (Structure | Tombstone | Ruin)) {\n  if (target == undefined) {\n    let structures = [...creep.room.find(FIND_STRUCTURES)]\n    .filter(structure => {\n      // Filter for containers and storages\n      return (structure.structureType === STRUCTURE_CONTAINER\n        || structure.structureType === STRUCTURE_STORAGE)\n        && structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0\n    })\n    .map(structure => {\n      return { structure, path: creep.pos.findPathTo(structure)}\n    }).sort((a, b) => {\n      if (a.path.length < b.path.length) return -1\n      if (a.path.length > b.path.length) return 1\n      return 0\n    })\n    if (structures[0] == undefined) {\n      warn(`Creep ${creep.name} unable to find suitable structure for getEnergy`)\n      if (countRole(CreepRole.miner) === 0) harvestEnergy(creep)\n      return\n    }\n    let structure = structures[0].structure as StructureContainer | StructureStorage\n    let path = structures[0].path\n\n\n    // Try to harvest energy. If we can't because we're not in range, move towards the target\n    let response = creep.withdraw(structure, RESOURCE_ENERGY)\n    if (response === ERR_NOT_IN_RANGE) {\n      creep.moveByPath(path)\n    } else if (response !== OK) {\n      warn(`Creep ${creep.name} getting energy ${structure.pos} with response ${errorConstant(response)}`)\n    }\n  } else {\n    // Try to harvest energy. If we can't because we're not in range, move towards the target\n    let response = creep.withdraw(target, RESOURCE_ENERGY)\n    if (response === ERR_NOT_IN_RANGE) {\n      creep.moveTo(target)\n    } else if (response !== OK) {\n      warn(`Creep ${creep.name} getting energy ${target.pos} with response ${errorConstant(response)}`)\n    }\n  }\n}\n\n/**\n * Deposit energy in the room's first spawn/extension\n *\n * @param  creep The creep to deposit the energy\n * @param  disableUpgrading whether to disable upgrading if no deposit locations\n * @return true if depositing, false if not depositing and not upgrading\n */\nexport function depositEnergy (creep: Creep, disableUpgrading = false): boolean {\n  // Get the first Spawn in the room\n  let target = creep.room.find(FIND_MY_STRUCTURES).filter(structure => {\n    return (structure.structureType === STRUCTURE_SPAWN || structure.structureType === STRUCTURE_EXTENSION) && structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0\n  })[0] as (StructureSpawn | StructureExtension)\n\n  // If the target has free energy capacity\n  if (target != undefined && target.store.getFreeCapacity(RESOURCE_ENERGY) !== 0) {\n    // Try to transfer energy to the target.\n    let response = creep.transfer(target, RESOURCE_ENERGY)\n    if (response === ERR_NOT_IN_RANGE) {\n      // If the spawn is not in range, move towards the spawn\n      creep.moveTo(target)\n    } else if (response !== OK) {\n      warn(`Creep ${creep.name} depositing ${target.pos} with response ${errorConstant(response)}`)\n    }\n    return true\n  } else {\n    // If the target has no free energy capacity, upgrade the controller\n    if (disableUpgrading) {\n      return false\n    }\n    upgradeController(creep)\n    return true\n  }\n}\n\n/**\n * Store energy in container or storage within range.\n *\n * @param  creep the creep storing energy\n * @param  range the range\n */\nexport function storeEnergy (creep: Creep) {\n  let structures = [...creep.room.find(FIND_STRUCTURES)]\n  .filter(structure => {\n    // Filter for containers and storages\n    return (structure.structureType === STRUCTURE_CONTAINER\n      || structure.structureType === STRUCTURE_STORAGE)\n      && structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0\n  })\n  .map(structure => {\n    return { structure, path: creep.pos.findPathTo(structure)}\n  }).sort((a, b) => {\n    if (a.path.length < b.path.length) return -1\n    if (a.path.length > b.path.length) return 1\n    return 0\n  })\n  if (structures[0] == undefined) {\n    warn(`Creep ${creep.name} unable to find suitable structure for storeEnergy, depositing`)\n    depositEnergy(creep)\n    return\n  }\n  let structure = structures[0].structure as StructureContainer | StructureStorage\n  let path = structures[0].path\n\n\n  // Try to harvest energy. If we can't because we're not in range, move towards the source\n  let response = creep.transfer(structure, RESOURCE_ENERGY)\n  if (response === ERR_NOT_IN_RANGE) {\n    creep.moveByPath(path)\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} getting energy ${structure.pos} with response ${errorConstant(response)}`)\n  }\n}\n\n/**\n * Upgrades the controller\n *\n * @param creep the creep to upgrade the controller\n */\nexport function upgradeController (creep: Creep) {\n  // Get the controller for the room that the creep is in\n  let controller = creep.room.controller\n  // Ensure `controller` is a StructureController\n  if (controller == undefined) {\n    throw new Error(\"upgradeController: creep.room.controller undefined\")\n  }\n\n  // Attempt to upgrade the controller, and save the response (OK or error)\n  let response = creep.upgradeController(controller)\n  if (response === ERR_NOT_IN_RANGE) {\n    creep.moveTo(controller)\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} attempting to upgrade controller with response ${response}`)\n  }\n}\n\n/**\n * Builds or moves to the creep's assigned construction site\n *\n * @param  creep the creep\n */\nexport function build (creep: Creep, building?: ConstructionSite) {\n  if (building == undefined) {\n    if (creep.memory.assignedConstruction == undefined) {\n      throw new Error (\"build creep has no assigned construction site\")\n    } else {\n      building = Game.getObjectById(creep.memory.assignedConstruction) as ConstructionSite\n    }\n  }\n\n  let response = creep.build(building)\n  if (response === ERR_NOT_IN_RANGE) {\n    creep.moveTo(building)\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} building ${building.pos} with response ${errorConstant(response)}`)\n  }\n}\n\n/**\n * Repairs or moves to the creep's assigned repair site\n *\n * @param  creep the creep\n * @param  repair the structure to repair\n */\nexport function repair (creep: Creep, repair?: Structure) {\n  if (repair == undefined) {\n    if (creep.memory.assignedRepairs == undefined) {\n      let idToRepair = fromRepairQueue()\n      repair = Game.getObjectById(idToRepair) as Structure\n      creep.memory.assignedRepairs = idToRepair\n    } else {\n      repair = Game.getObjectById(creep.memory.assignedRepairs) as Structure\n    }\n  }\n\n  let response = creep.repair(repair)\n  if (response === ERR_NOT_IN_RANGE) {\n    creep.moveTo(repair)\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} repairing ${repair.pos} with response ${errorConstant(response)}`)\n  }\n}\n\nexport function idle (creep: Creep, position?: RoomPosition) {\n  // Idle creeps upgrade the controller\n  upgradeController(creep)\n}\n\nexport function haul (creep: Creep, target: (Creep | PowerCreep | Structure)) {\n  let response = creep.transfer(target, RESOURCE_ENERGY)\n  if (response === ERR_NOT_IN_RANGE) {\n    // If the spawn is not in range, move towards the spawn\n    creep.moveTo(target)\n  } else if (response !== OK) {\n    warn(`Creep ${creep.name} hauling to ${target.pos} with response ${errorConstant(response)}`)\n  }\n}\n","import { depositEnergy, getEnergy, harvestEnergy, storeEnergy, build, idle, repair, haul, upgradeController } from \"actions\"\nimport { fromQueue, queueLength, unassignConstruction, fromRepairQueue, repairQueueLength } from \"construct\";\nimport { error, info } from \"utils/logger\";\n\n/**\n * Behavior for a harvester creep (CreepRole.harvester)\n *\n * @param  creep the harvester creep\n */\nfunction harvester (creep: Creep) {\n  if (creep.memory.task === CreepTask.fresh) creep.memory.task = CreepTask.harvest\n\n  switch (creep.memory.task) {\n    // The creep is harvesting\n    case CreepTask.harvest: {\n      if (creep.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has more free energy, keep harvesting\n        harvestEnergy(creep)\n      } else {\n        switchTaskAndDoRoll(creep, CreepTask.deposit)\n        return\n      }\n      break\n    }\n    // The creep is depositing\n    case CreepTask.deposit: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has energy, keep depositing\n        depositEnergy(creep)\n      } else {\n        // If the creep has no energy, begin harvesting\n        switchTaskAndDoRoll(creep, CreepTask.harvest)\n        return\n      }\n      break\n    }\n    // The creep is neither harvesting nor depositing, i.e. it has an invalid task\n    default: {\n      throw new Error(\"harvester creep.memory.task should be harvest or deposit, not \"\n      + creep.memory.task)\n    }\n  }\n}\n\n/**\n * Behavior function for a miner creep (CreepRole.miner). This creep should stay near a source and\n * harvest until full. Then deposit into a nearby energy store, i.e. a container.\n *\n * @param  creep the miner creep\n */\nfunction miner (creep: Creep) {\n  if (creep.memory.task === CreepTask.fresh) creep.memory.task = CreepTask.harvest\n\n  // Tasks for this creep:\n  // 1. CreepTask.harvest: harvest from assigned energy source\n  // 2. CreepTask.deposit: deposite into nearby energy store\n  switch (creep.memory.task) {\n    // The creep is harvesting\n    case CreepTask.harvest: {\n      let source = Game.getObjectById(creep.memory.assignedSource) as Source\n      if (creep.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has more free energy, keep harvesting\n        harvestEnergy(creep, source)\n      } else {\n        // If the creep has no free energy, begin depositing\n        switchTaskAndDoRoll(creep, CreepTask.deposit)\n        return\n      }\n      break\n    }\n    // The creep is depositing\n    case CreepTask.deposit: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has energy, keep depositing\n        storeEnergy(creep)\n      } else {\n        // If the creep has no energy, begin harvesting\n        switchTaskAndDoRoll(creep, CreepTask.harvest)\n        return\n      }\n      break\n    }\n    // The creep is neither harvesting nor depositing, i.e. it has an invalid task\n    default: {\n      throw new Error(\"miner creep.memory.task should be harvest or deposit, not \"\n      + creep.memory.task)\n    }\n  }\n}\n\n/**\n * Behavior function for builder creeps (CreepRole.builder). These creeps should construct buildings\n * in the build queue.\n *\n * @param  creep the builder creep\n */\nfunction builder (creep: Creep) {\n  if (creep.memory.task === CreepTask.fresh) creep.memory.task = CreepTask.getEnergy\n\n  // Tasks for this creep:\n  // 1. CreepTask.getEnergy: Get energy to construct buildings\n  // 2. CreepTask.build: Move to a construction site and build\n  // 3. CreepTask.repair: Move to a repairable structure and repair\n  // 4. CreepTask.idle: Move to the idle location and chill\n  switch (creep.memory.task) {\n    case CreepTask.getEnergy: {\n      if (creep.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep can hold more energy, keep getting energy\n        getEnergy(creep)\n      } else {\n        // If the creep has full energy, begin building\n        switchTaskAndDoRoll(creep, CreepTask.build)\n        return\n      }\n      break\n    }\n    case CreepTask.build: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has more energy, continue building\n        if (creep.memory.assignedConstruction || queueLength() > 0) {\n          if (creep.memory.assignedConstruction == undefined\n            || Game.getObjectById(creep.memory.assignedConstruction) == undefined) {\n            creep.memory.assignedConstruction = fromQueue()\n            if (creep.memory.assignedConstruction == undefined) {\n              error(`queueLength was positive but creep ${creep.name} unable to get assignment`)\n              // End the behavior function\n              return\n            }\n          }\n          // Perform the build action\n          build(creep)\n        } else {\n          // If there is nothing to build, repair\n          info(`No items in the construction queue`, InfoType.general)\n          switchTaskAndDoRoll(creep, CreepTask.repair)\n          return\n        }\n      } else {\n        switchTaskAndDoRoll(creep, CreepTask.getEnergy)\n        return\n      }\n      break\n    }\n    case CreepTask.idle: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) === 0) {\n        // If the creep has no energy, it should get energy\n        switchTaskAndDoRoll(creep, CreepTask.getEnergy)\n        return\n      } else if (creep.memory.assignedConstruction || queueLength() > 0) {\n        // Build\n        switchTaskAndDoRoll(creep, CreepTask.build)\n        return\n      } else if (creep.memory.assignedRepairs || repairQueueLength() > 0) {\n        // Repair\n        switchTaskAndDoRoll(creep, CreepTask.repair)\n        return\n      } else {\n        // Remain idle\n        info(`Creep ${creep.name} is idle`, InfoType.idleCreep)\n        idle(creep)\n      }\n      break\n    }\n    case CreepTask.repair: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        if (creep.memory.assignedRepairs == undefined) {\n          creep.memory.assignedRepairs = fromRepairQueue()\n          if (creep.memory.assignedRepairs == undefined) {\n            // If there is nothing to repair, idle\n            info(`No items in the repair queue`, InfoType.general)\n            switchTaskAndDoRoll(creep, CreepTask.idle)\n            return\n          }\n        }\n        // Only repair structures that need repairs\n        let repairStructure = Game.getObjectById(creep.memory.assignedRepairs) as Structure\n        while (repairStructure.hits === repairStructure.hitsMax) {\n          repairStructure = Game.getObjectById(fromRepairQueue()) as Structure\n          // If we've reached the end of the repairQueue without a valid repair,\n          if (repairStructure == undefined) {\n            // Delete the creeps assigned repair\n            delete creep.memory.assignedRepairs\n            // And go idle\n            switchTaskAndDoRoll(creep, CreepTask.idle)\n            return\n          }\n        }\n        creep.memory.assignedRepairs = repairStructure.id\n\n        repair(creep, Game.getObjectById(creep.memory.assignedRepairs) as Structure)\n      } else {\n        switchTaskAndDoRoll(creep, CreepTask.getEnergy)\n        return\n      }\n      break\n    }\n    // The creep  has an invalid task\n    default: {\n      error(`builder creep.memory.task should be ${CreepTask.getEnergy} or ` +\n        `${CreepTask.build}, not ${creep.memory.task}`)\n    }\n  }\n}\n\nfunction upgrader (creep: Creep) {\n  if (creep.memory.task === CreepTask.fresh) creep.memory.task = CreepTask.getEnergy\n\n  // Tasks for this creep:\n  // 1. Get energy\n  // 2. Deposit energy first in the spawn then upgrade the controller\n  switch (creep.memory.task) {\n    // The creep is getting energy\n    case CreepTask.getEnergy: {\n      if (creep.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep can hold more energy, keep getting energy\n        getEnergy(creep)\n      } else {\n        // If the creep has full energy, begin building\n        switchTaskAndDoRoll(creep, CreepTask.deposit)\n        return\n      }\n      break\n    }\n    // The creep is depositing\n    case CreepTask.deposit: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has energy, keep depositing\n        if (countRole(CreepRole.hauler) > 0) {\n          info(`Creep ${creep.name} should upgrade`)\n          upgradeController(creep)\n        } else {\n          info(`Creep ${creep.name} should deposit`)\n          depositEnergy(creep)\n        }\n      } else {\n        // If the creep has no energy, begin getting energy\n        switchTaskAndDoRoll(creep, CreepTask.getEnergy)\n        return\n      }\n      break\n    }\n    // The creep is neither harvesting nor depositing, i.e. it has an invalid task\n    default: {\n      error(`Creep ${creep} should have tasks ${CreepTask.getEnergy} or ${CreepTask.deposit}, ` +\n        `not ${creep.memory.task}`)\n    }\n  }\n}\n\nfunction hauler (creep: Creep) {\n  if (creep.memory.task === CreepTask.fresh) creep.memory.task = CreepTask.getEnergy\n\n  // Tasks for this creep:\n  // 1. getEnergy: Get energy from fullest container\n  // 2. deposit: Deposit into spawn/extension or least full container\n  switch (creep.memory.task) {\n    // Creep is getting energy\n    case CreepTask.getEnergy: {\n      if (creep.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        // Get all containers\n        let containers = [...creep.room.find(FIND_STRUCTURES)]\n        .filter(structure => {\n          // Filter for containers and storages\n          return structure.structureType === STRUCTURE_CONTAINER\n            && structure.store.getUsedCapacity(RESOURCE_ENERGY) > 0\n        }).map(structure => {\n          return structure as StructureContainer\n        })\n        // Get the fullest container\n        if (containers.length > 0) {\n          let fullest = containers.reduce((a, b) => {\n            if (a.store.getUsedCapacity(RESOURCE_ENERGY) > b.store.getUsedCapacity(RESOURCE_ENERGY)) {\n              return a\n            } else {\n              return b\n            }\n          })\n\n          // If the creep can hold more energy, keep getting energy\n          getEnergy(creep, fullest)\n        }\n      } else {\n        // If the creep has full energy, begin building\n        switchTaskAndDoRoll(creep, CreepTask.deposit)\n        return\n      }\n      break\n    }\n    // The creep is depositing\n    case CreepTask.deposit: {\n      if (creep.store.getUsedCapacity(RESOURCE_ENERGY) > 0) {\n        // If the creep has energy, keep depositing\n        if(!depositEnergy(creep, true)) {\n          // If there are no deposit locations haul instead\n          let containers = [...creep.room.find(FIND_STRUCTURES)]\n          .filter(structure => {\n            // Filter for containers and storages\n            return structure.structureType === STRUCTURE_CONTAINER\n              && structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0\n          }).map(structure => {\n            return structure as StructureContainer\n          })\n          if (containers.length > 0) {\n            let emptiest = containers.reduce((a, b) => {\n              if (a.store.getUsedCapacity(RESOURCE_ENERGY) < b.store.getUsedCapacity(RESOURCE_ENERGY)) {\n                return a\n              } else {\n                return b\n              }\n            })\n            haul(creep, emptiest)\n          }\n        }\n      } else {\n        // If the creep has no energy, begin getting energy\n        switchTaskAndDoRoll(creep, CreepTask.getEnergy)\n        return\n      }\n      break\n    }\n  }\n}\n\n/**\n * Switches the creeps task and then calls doRoll on the creep\n *\n * @param  creep the creep\n * @param  task the new role for the creep\n */\nfunction switchTaskAndDoRoll (creep: Creep, task: CreepTask) {\n  creep.memory.task = task\n  info(`Creep ${creep.name} switching to ${task} and performing ${creep.memory.role}`,\n    InfoType.task)\n  doRole(creep)\n}\n\n/**\n * Count the number of creeps of a certain role\n *\n * @param  role the role to count\n *\n * @return the number of creeps\n */\nexport function countRole (role: CreepRole): number {\n  let count = 0\n  for (let name in Game.creeps) {\n    if (Game.creeps[name].memory.role === role) count++\n  }\n  return count\n}\n\n/**\n * Generates a name for the creep based on its memory\n *\n * @param  memory the memory of the creep-to-be\n *\n * @return a name\n */\nexport function nameCreep (memory: CreepMemory) {\n  // Start the name with the creeps role\n  let name = memory.role + \"_\"\n  // Since there will be multiple creeps per role, a number will be need since names must be unique\n  let number = 0\n  // While there is a creep with the same name, increment number\n  while (Game.creeps[name + number] !== undefined) {\n    number++\n  }\n  return name + number\n}\n\n/**\n * Passes creep to appropriate behavior function based on the creep's role (`creep.memory.role`)\n *\n * @param  creep the creep\n */\nexport function doRole (creep: Creep) {\n  if (creep.spawning) return\n  if (Memory.debug.sayTask) creep.say(creep.memory.task)\n  switch (creep.memory.role) {\n    case CreepRole.harvester:\n      harvester(creep)\n      break\n    case CreepRole.builder:\n      builder(creep)\n      break\n    case CreepRole.miner:\n      miner(creep)\n      break\n    case CreepRole.upgrader:\n      upgrader(creep)\n      break\n    case CreepRole.hauler:\n      hauler(creep)\n      break\n    default:\n      throw new Error(\"doRole invalid role \" + creep.memory.role)\n  }\n}\n\n/**\n * Performs actions upon the death of a creep based on the creeps roll\n *\n * @param  name the name of the dead creep\n */\nexport function handleDead (name: string) {\n  info(`Handling death of creep ${name}`, InfoType.general)\n  let memory = Memory.creeps[name]\n  switch (memory.role) {\n    case CreepRole.builder:\n      if (memory.assignedConstruction) {\n        unassignConstruction(name)\n      }\n  }\n}\n","import { initConstruction } from \"construct\";\n\n// For when you need to set up a new colony\n\nexport function init() {\n  console.log(\"Initializing...\")\n  // If we are initializing, we should only have one spawn anyway, so this is fine\n  const spawn = Game.spawns[Memory.initialSpawn]\n\n  // Spawn a creep at the spawn, this will be our energy harvester\n  let response = spawn.spawnCreep([WORK, MOVE, CARRY], \"InitWorker1\", {\n    memory: {\n      role: CreepRole.harvester,\n      // The creep should default to harvesting\n      task: CreepTask.harvest,\n    }\n  })\n  console.log(\"spawn creep response: \" + response)\n\n  // Initialize construction\n  initConstruction(spawn)\n\n  Memory.uninitialized = false\n  console.log(\"Initialized!\")\n}\n","import { nameCreep, countRole } from \"creeps\";\nimport { errorConstant, stringifyBody, info, error, warn } from \"utils/logger\";\nimport { queueLength, getSurroundingTiles, buildStructure, repairQueueLength } from \"construct\";\n\nexport function spawnManager(spawn: StructureSpawn) {\n  // Currently no spawn queue, so we can only queue one creep per tick\n  let allowSpawn = true;\n\n  // Spawn harvester creeps\n  let maxHarvesters = Memory.populationLimit.harvester || 0\n  let harvestersCount = countRole(CreepRole.harvester)\n  if (harvestersCount < maxHarvesters) {\n    if (allowSpawn) {\n      info(`${spawn.name}     requesting ${CreepRole.harvester}`, InfoType.spawn)\n      spawnCreep(spawn, CreepRole.harvester)\n    } else {\n      info(`${spawn.name} NOT requesting ${CreepRole.harvester}`, InfoType.spawn)\n    }\n    allowSpawn = false\n  }\n\n  // Spawn miner creeps\n  let sources = spawn.room.find(FIND_SOURCES)\n  let minerCount = countRole(CreepRole.miner)\n  let maxMiners = Memory.populationLimit.miner || 0\n  if (minerCount < maxMiners) {\n    if (allowSpawn) {\n      info(`${spawn.name}     requesting ${CreepRole.miner}`, InfoType.spawn)\n      let memory = generateMemoryByRole(CreepRole.miner)\n      // Get the id of the miner, which is the number attached the end of it's name\n      let id = Number(nameCreep(memory).replace(\"miner_\", \"\"))\n      spawnCreep(spawn, CreepRole.miner, minerCount < sources.length ? {\n        assignedSource: sources[id].id\n      } : {})\n    }  else {\n      info(`${spawn.name} NOT requesting ${CreepRole.miner}`, InfoType.spawn)\n    }\n    allowSpawn = false\n  }\n\n  // Spawn upgrader creeps\n  let maxUpgraders = Memory.populationLimit.upgrader || 0\n  let upgraderCount = countRole(CreepRole.upgrader)\n  if (upgraderCount < maxUpgraders) {\n    if (allowSpawn) {\n      info(`${spawn.name}     requesting ${CreepRole.upgrader}`, InfoType.spawn)\n      spawnCreep(spawn, CreepRole.upgrader)\n    } else {\n      info(`${spawn.name} NOT requesting ${CreepRole.upgrader}`, InfoType.spawn)\n    }\n    allowSpawn = false\n  }\n\n  // Spawn builder creeps\n  let builderCount = countRole(CreepRole.builder)\n  let maxBuilders = Memory.populationLimit.builder || 0\n  if (builderCount < maxBuilders) {\n    if (allowSpawn) {\n      info(`${spawn.name}     requesting ${CreepRole.builder}`, InfoType.spawn)\n      spawnCreep(spawn, CreepRole.builder)\n    } else {\n      info(`${spawn.name} NOT requesting ${CreepRole.builder}`, InfoType.spawn)\n    }\n    allowSpawn = false\n  }\n\n  // Spawn hauler creeps\n  let haulerCount = countRole(CreepRole.hauler)\n  let maxHaulers = Memory.populationLimit.hauler || 0\n  if (haulerCount < maxHaulers) {\n    if (allowSpawn) {\n      info(`${spawn.name}     requesting ${CreepRole.hauler}`, InfoType.spawn)\n      spawnCreep(spawn, CreepRole.hauler)\n    } else {\n      info(`${spawn.name} NOT requesting ${CreepRole.hauler}`, InfoType.spawn)\n    }\n    allowSpawn = false\n  }\n\n  // Build extentions\n  let controller = (spawn.room.controller as StructureController).level\n  if (spawn.memory.extensions.length < getMaxExtensions(controller)) requestExtentions(spawn)\n}\n\nfunction spawnCreep (spawn: StructureSpawn, role: CreepRole, overrides?: Partial<CreepMemory>) {\n  let memory = generateMemoryByRole(role)\n  if (overrides != undefined) {\n    for (let key in overrides) {\n      memory[key] = overrides[key]\n    }\n  }\n  let name = nameCreep(memory)\n  let body = generateBodyByRole(spawn, role)\n  let response = spawn.spawnCreep(body, name, {\n    memory\n  })\n  info(`${spawn.name} spawning creep ${name} (${stringifyBody(body)}): ` +\n  `${errorConstant(response)}`, InfoType.spawn)\n}\n\nfunction generateBodyByRole (spawn: StructureSpawn, role: CreepRole): BodyPartConstant[] {\n  switch (role) {\n    case CreepRole.miner: {\n      let body: BodyPartConstant[] = [CARRY, MOVE]\n      // The capacity minus the carry and move part cost divided by the work part cost\n      let workParts = Math.floor((getSpawnCapacity(spawn) - 100) / 100)\n      for (let i = 0; i < workParts; i++) {\n        // If there are more than five work parts, alternate between adding work and carry parts\n        if (i > 5 && i % 2 === 1) {\n          // One carry costs 50, so two carry costs the same as one work\n          body.push(CARRY, CARRY)\n          continue\n        }\n        body.push(WORK)\n      }\n      return body\n    }\n    case CreepRole.builder:\n    case CreepRole.upgrader: {\n      let body: BodyPartConstant[] = []\n      let bodyUnits = Math.floor((getSpawnCapacity(spawn)) / 100)\n      for (let i = 0; i < bodyUnits; i++) {\n        if (i % 2 === 0) {\n          body.push(MOVE, CARRY)\n        } else {\n          body.push(WORK)\n        }\n      }\n      return body\n    }\n    case CreepRole.hauler: {\n      let body: BodyPartConstant[] = [WORK]\n      // Energy capacity minus work cost divided by MOVE/CARRY cost\n      let bodyUnits = Math.floor((getSpawnCapacity(spawn) - 100) / 50)\n      // Alternate between adding move and carry parts\n      for (let i = 0; i < bodyUnits; i++) {\n        if (i % 2 === 0) {\n          body.push(MOVE)\n        } else {\n          body.push(CARRY)\n        }\n      }\n      return body\n    }\n    default: error(`getBodyPartsFromRole invalid role ${role}`); return []\n  }\n}\n\nfunction generateMemoryByRole (role: CreepRole): CreepMemory {\n  return {\n    role,\n    task: CreepTask.fresh\n  }\n}\n\nfunction requestExtentions (spawn: StructureSpawn) {\n  if (spawn.memory.extensions == undefined) spawn.memory.extensions = []\n  if (queueLength() === 0 && repairQueueLength() == 0) {\n    let shouldRequest = true\n    let terrain = Game.map.getRoomTerrain(spawn.room.name)\n    let surrounding = getSurroundingTiles(spawn.pos, 2).filter(position => {\n      let empty = true\n      if (terrain.get(position.x, position.y) !== 0) {\n        // This terrain isn't viable\n        empty = false\n      }\n      position.lookFor(LOOK_STRUCTURES).forEach(() => {\n        empty = false\n      })\n      position.lookFor(LOOK_CONSTRUCTION_SITES).forEach(site => {\n        empty = false\n        if (site.structureType === STRUCTURE_EXTENSION) {\n          shouldRequest = false\n        }\n      })\n      return empty\n    })\n\n    if (shouldRequest) {\n      info(`Spawn ${spawn.name} requesting extention at ${surrounding[0]}`, InfoType.build)\n      if (buildStructure(surrounding[0], STRUCTURE_EXTENSION)) {\n        spawn.memory.extensions.push(surrounding[0])\n      } else {\n        warn(`Spawn ${spawn.name} failed extention request at ${surrounding[0]}`)\n      }\n    }\n  }\n}\n\nfunction getSpawnExtensions (spawn: StructureSpawn): StructureExtension[] {\n  let extensions: StructureExtension[] = []\n  if (spawn.memory.extensions == undefined) return []\n  spawn.memory.extensions.forEach(position => {\n    let pos = spawn.room.getPositionAt(position.x, position.y)\n    if (pos == undefined) return\n    pos.lookFor(LOOK_STRUCTURES).filter(structure => {\n      return structure.structureType === STRUCTURE_EXTENSION\n    }).forEach(extension => {\n      extensions.push(extension as StructureExtension)\n    })\n  })\n  return extensions\n}\n\nfunction getSpawnCapacity (spawn: StructureSpawn): number {\n  let capacity = spawn.store.getCapacity(RESOURCE_ENERGY)\n  getSpawnExtensions(spawn).forEach(extension => {\n    capacity += extension.store.getCapacity(RESOURCE_ENERGY)\n  })\n  return capacity\n}\n\nfunction getSpawnEnergy (spawn: StructureSpawn): number {\n  let energy = spawn.store.getUsedCapacity(RESOURCE_ENERGY)\n  getSpawnExtensions(spawn).forEach(extension => {\n    energy += extension.store.getUsedCapacity(RESOURCE_ENERGY)\n  })\n  return energy\n}\n\nexport function getMaxExtensions (level: number): number {\n  switch (level) {\n    case 2: return 5\n    case 3: return 10\n    case 4: return 20\n    case 5: return 30\n    case 6: return 40\n    case 7: return 50\n    case 8: return 60\n    default: return 0\n  }\n}\n","import { getSurroundingTiles, queueLength, repairQueueLength } from \"construct\";\nimport { info } from \"utils/logger\";\n\n/**\n * Reasses population limits\n *\n * @param  room the room\n */\nexport function census(room: Room) {\n  info(`Updating population limits`, InfoType.spawn)\n  // Recalculate miners\n  let miners = 0\n  room.find(FIND_SOURCES).forEach(source => {\n    let containersAroundSource = 0\n    getSurroundingTiles(source.pos, 2).forEach(position => {\n      // One miner per source with a container around it\n      containersAroundSource += position.lookFor(LOOK_STRUCTURES).filter(structure => {\n        return structure.structureType === STRUCTURE_CONTAINER\n      }).length\n    })\n    if (containersAroundSource > 0) miners++\n  })\n\n  // If we have no miners, we need harvesters\n  let harvesters = 0\n  let upgraders = 0\n  let haulers = 0\n  if (miners === 0) {\n    harvesters = 1\n  } else {\n    // If we have miners, we want upgraders\n    upgraders = miners * 2 - 1\n    // One hauler per four upgraders with a minimum of 1 hauler\n    haulers = Math.floor(upgraders) / 4 || 1\n  }\n\n  // One builder per two construction queue items, or per ten repair queue items, with a minimum of\n  // one builder\n  let builders = Math.max(Math.floor(queueLength() / 2), Math.floor(repairQueueLength() / 10)) || 1\n\n  Memory.populationLimit.miner = miners\n  Memory.populationLimit.harvester = harvesters\n  Memory.populationLimit.upgrader = upgraders\n  Memory.populationLimit.builder = builders\n  Memory.populationLimit.hauler = haulers\n}\n","import { ErrorMapper } from \"utils/ErrorMapper\"\nimport { watcher } from \"utils/watch-client\"\nimport { doRole, handleDead } from \"creeps\"\nimport { init } from \"initialize\"\nimport { spawnManager, getMaxExtensions } from \"spawns\";\nimport { tick, info, warn } from \"utils/logger\";\nimport { resetRepairQueue, constructMinerContainers } from \"construct\"\nimport { census } from \"population\";\n\nconsole.log(\"- - - - RESTARTING - - - -\")\n\nexport function resetMemory() {\n  warn(\"Reseting memory\")\n  Memory.uninitialized = true\n  Memory.initialSpawn = \"Spawn1\"\n  Memory.constructionQueue = []\n  Memory.repairQueue = []\n  Memory.watch = {}\n  Memory.debug = {\n    log: {\n      infoSettings: {\n        general: true,\n        spawn: true,\n        task: true,\n        idleCreep: true,\n        build: true\n      }\n    }\n  }\n  Memory.populationLimit = {\n    builder: 1\n  }\n  Memory.status = {}\n}\n\nexport const loop = ErrorMapper.wrapLoop(() => {\n  tick()\n\n  if (Memory.uninitialized) {\n    init()\n  }\n\n  // Automatically delete memory of missing creeps\n  for (const name in Memory.creeps) {\n    if (!(name in Game.creeps)) {\n      handleDead(name)\n      delete Memory.creeps[name]\n    }\n  }\n\n  // Process creep behavior\n  for (const name in Game.creeps) {\n    doRole(Game.creeps[name])\n  }\n\n  // Process spawn behavior\n  for (const name in Game.spawns) {\n    spawnManager(Game.spawns[name])\n  }\n\n  // Update repair queue and pop limits every 100 ticks\n  if (Game.time % 100 === 0) {\n    for (const name in Game.rooms) {\n      let room = Game.rooms[name]\n      // This will not work with multiple rooms, despite the way I've made it\n      resetRepairQueue(room)\n      census(room)\n      // If we have reached the miner tier, queue as many containers as possible for sources\n      if (!Memory.status.builtAllSourceContainers && Memory.populationLimit.miner) {\n        let maxExtensions = getMaxExtensions((room.controller as StructureController).level)\n        let extensionsCount = room.find(FIND_MY_STRUCTURES).filter(structure => {\n          return structure.structureType === STRUCTURE_EXTENSION\n        }).length\n        if (extensionsCount === maxExtensions) {\n          info(`Requesting containers around sources`, InfoType.build)\n          constructMinerContainers(room, -1)\n          Memory.status.builtAllSourceContainers = true\n        } else {\n          info(`Waiting for max extensions to request containers around sources`, InfoType.build)\n        }\n      }\n    }\n  }\n\n  // screeps-multimeter watcher\n  watcher()\n});\n"],"names":["ArraySet","require$$0","quickSort","require$$1","base64VLQ","SourceMapConsumer","build"],"mappings":"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"};